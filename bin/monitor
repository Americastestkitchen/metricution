#!/usr/bin/env ruby
require_relative '../config/boot'
require_relative '../config/environment'

# Setup the connection to the Spark Cloud.
uri = URI('https://api.spark.io/v1/events/door')
http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true
req = Net::HTTP::Get.new(uri)
req["Authorization"] = "Bearer #{ENV['SPARK_AUTH_TOKEN']}"
req["Content-Type"]  = "application/json"

# Register callbacks for Server Sent Events.
sse = Metricution::SSE::Reader.new(http, req)
sse.subscribe('door') do |message|
  sparkcore_data = JSON.parse(message)
  status = sparkcore_data['data'] == 'opened' ? 'available' : 'occupied'
  bathroom = Bathroom.where(sparkcore_id: sparkcore_data['coreid']).first_or_create(name: "unknown")
  bathroom.update_attributes(status: status)
end

# Connect and listen forever.
sse.start(verbose: true)
